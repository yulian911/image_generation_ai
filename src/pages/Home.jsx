import React, { useState } from 'react';
import { useQuery } from '@tanstack/react-query';
import { getImages } from '../api/imageApi';
import { Card, FormField, Loader } from '../components';

const RenderCards = ({ data, title }) => {
  if (data?.length > 0) {
    return data.map(post => <Card key={post._id} {...post} />);
  }

  return <h2 className="mt-5 font-bold text-[#6469ff] text-xl uppercase">{title}</h2>;
};

const Home = () => {
  const [searchText, setSearchText] = useState('');
  const [searchTimeout, setSearchTimeout] = useState(null);
  const [searchedResults, setSearchedResults] = useState(null);

  const { data, status, error } = useQuery({
    queryKey: ['images'],
    queryFn: getImages,
    // staleTime:1000  co ile ma odswie≈ºac
    refetchInterval: 15000,
  });

  if (status === 'loading')
    return (
      <div className="flex justify-center items-center">
        <Loader />
      </div>
    );
  if (status === 'error') {
    <h1>{JSON.stringify(error)}</h1>;
  }

  const handleSearchChange = e => {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResult = data?.data.data.filter(
          item =>
            item.name.toLowerCase().includes(searchText.toLowerCase()) ||
            item.prompt.toLowerCase().includes(searchText.toLowerCase()),
        );
        setSearchedResults(searchResult);
      }, 500),
    );
  };
  return (
    <section className="max-w-7xl mx-auto">
      <div>
        <h1 className="font-extrabold text-[#222328] text-[32px]">The Community Showcase</h1>
        <p className="mt-2 text-[#666e75] text-[14px] max-w-[500px]">
          Browse through a collection of imaginative and visually stunning images generated by
          DALL-E AI
        </p>
      </div>
      <div className="mt-16">
        <FormField
          labelName="Search posts"
          type="text"
          name="text"
          placeholder="Search something..."
          value={searchText}
          handleChange={handleSearchChange}
        />
        <div className="mt-10">
          {searchText && (
            <h2 className="font-medium text-[#666e75] text-xl mb-3">
              Showing Resuls for <span className="text-[#222328]">{searchText}</span>:
            </h2>
          )}
          <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
            {searchText ? (
              <RenderCards data={searchedResults} title="No Search Results Found" />
            ) : (
              <RenderCards data={data.data.data} title="No Posts Yet" />
            )}
          </div>
        </div>
      </div>
    </section>
  );
};

export default Home;
